type Workout @aws_api_key {
  id: ID!
  workout: String!
  description: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelWorkoutConnection @aws_api_key {
  items: [Workout]!
  nextToken: String
}

input ModelWorkoutFilterInput {
  id: ModelIDInput
  workout: ModelStringInput
  description: ModelStringInput
  and: [ModelWorkoutFilterInput]
  or: [ModelWorkoutFilterInput]
  not: ModelWorkoutFilterInput
}

type Query {
  getWorkout(id: ID!): Workout @aws_api_key
  listWorkouts(filter: ModelWorkoutFilterInput, limit: Int, nextToken: String): ModelWorkoutConnection @aws_api_key
}

input ModelWorkoutConditionInput {
  workout: ModelStringInput
  description: ModelStringInput
  and: [ModelWorkoutConditionInput]
  or: [ModelWorkoutConditionInput]
  not: ModelWorkoutConditionInput
}

input CreateWorkoutInput {
  id: ID
  workout: String!
  description: String!
}

input UpdateWorkoutInput {
  id: ID!
  workout: String
  description: String
}

input DeleteWorkoutInput {
  id: ID!
}

type Mutation {
  createWorkout(input: CreateWorkoutInput!, condition: ModelWorkoutConditionInput): Workout @aws_api_key
  updateWorkout(input: UpdateWorkoutInput!, condition: ModelWorkoutConditionInput): Workout @aws_api_key
  deleteWorkout(input: DeleteWorkoutInput!, condition: ModelWorkoutConditionInput): Workout @aws_api_key
}

input ModelSubscriptionWorkoutFilterInput {
  id: ModelSubscriptionIDInput
  workout: ModelSubscriptionStringInput
  description: ModelSubscriptionStringInput
  and: [ModelSubscriptionWorkoutFilterInput]
  or: [ModelSubscriptionWorkoutFilterInput]
}

type Subscription {
  onCreateWorkout(filter: ModelSubscriptionWorkoutFilterInput): Workout @aws_subscribe(mutations: ["createWorkout"]) @aws_api_key
  onUpdateWorkout(filter: ModelSubscriptionWorkoutFilterInput): Workout @aws_subscribe(mutations: ["updateWorkout"]) @aws_api_key
  onDeleteWorkout(filter: ModelSubscriptionWorkoutFilterInput): Workout @aws_subscribe(mutations: ["deleteWorkout"]) @aws_api_key
}
