type veteranInfo {
  id: ID!
  name: String!
  description: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  owner: String
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelVeteranInfoConnection {
  items: [veteranInfo]!
  nextToken: String
}

input ModelVeteranInfoFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  description: ModelStringInput
  and: [ModelVeteranInfoFilterInput]
  or: [ModelVeteranInfoFilterInput]
  not: ModelVeteranInfoFilterInput
}

type Query {
  getVeteranInfo(id: ID!): veteranInfo
  listVeteranInfos(filter: ModelVeteranInfoFilterInput, limit: Int, nextToken: String): ModelVeteranInfoConnection
}

input ModelVeteranInfoConditionInput {
  name: ModelStringInput
  description: ModelStringInput
  and: [ModelVeteranInfoConditionInput]
  or: [ModelVeteranInfoConditionInput]
  not: ModelVeteranInfoConditionInput
}

input CreateVeteranInfoInput {
  id: ID
  name: String!
  description: String
}

input UpdateVeteranInfoInput {
  id: ID!
  name: String
  description: String
}

input DeleteVeteranInfoInput {
  id: ID!
}

type Mutation {
  createVeteranInfo(input: CreateVeteranInfoInput!, condition: ModelVeteranInfoConditionInput): veteranInfo
  updateVeteranInfo(input: UpdateVeteranInfoInput!, condition: ModelVeteranInfoConditionInput): veteranInfo
  deleteVeteranInfo(input: DeleteVeteranInfoInput!, condition: ModelVeteranInfoConditionInput): veteranInfo
}

input ModelSubscriptionVeteranInfoFilterInput {
  id: ModelSubscriptionIDInput
  name: ModelSubscriptionStringInput
  description: ModelSubscriptionStringInput
  and: [ModelSubscriptionVeteranInfoFilterInput]
  or: [ModelSubscriptionVeteranInfoFilterInput]
}

type Subscription {
  onCreateVeteranInfo(filter: ModelSubscriptionVeteranInfoFilterInput, owner: String): veteranInfo @aws_subscribe(mutations: ["createVeteranInfo"])
  onUpdateVeteranInfo(filter: ModelSubscriptionVeteranInfoFilterInput, owner: String): veteranInfo @aws_subscribe(mutations: ["updateVeteranInfo"])
  onDeleteVeteranInfo(filter: ModelSubscriptionVeteranInfoFilterInput, owner: String): veteranInfo @aws_subscribe(mutations: ["deleteVeteranInfo"])
}
